{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"cApStAn's Translation Tech Team (TTT) docs","text":"<p>This is cApStAn's Translation Tehcnology Team's documentation site, the main focus of which is on translation technology.</p> <p>This documentation is maintained by and meant to be used internally by cApStAn's TTT. Some documents might be of interest to other people, but whenever that's the case, the document will be shared in the appropriate location (e.g. KnowSystem in Odoo).</p>"},{"location":"about/","title":"Aequora vulgus esse tales suis lumina adspicit","text":""},{"location":"about/#dea-per-ramos-ingrederis-ore-ingrederis-futura","title":"Dea per ramos ingrederis ore ingrederis futura","text":"<p>Lorem markdownum docuit, purpureis duorum metuam nulla Aeacidae, dare urbi et, tuis quid quam meritis nomine. Erant veste profana apertum Titania. Longoque sua nostras moenibus vestri me arbore commenta insania, est orbem tenenti mortua, sidera, qui. Quod nec ulla, census ait manere te in pace more; ulla dei vident montis et discrimine certum.</p>"},{"location":"about/#sit-di-sinamus-capreas","title":"Sit di sinamus Capreas","text":"<p>Fugere fallax meruistis viriles; peccare pedibusque adunca Pygmaeae concita: amor. Foret cultu quas ab magni Quiriti ipsa autumni vitant percutiensque hunc glandes spoliat in, est. Per tecto Cometen alas credere septenis, de erat. Varius esses!</p>"},{"location":"about/#sede-tibi-placet","title":"Sede tibi placet","text":"<p>Et fatur dum sua; contrahitur emittere pulchra adacta. Lammina Tatiusque herbae spargit amplexa, omnes ista falli, nutritur Anius viarum carina, huic Phaethonta locuti? Requievit Phrygum tandemque vana iuvenis. Hasta Theseus, una invenio aliquid audet profundo fortibus et nunc, alimentaque caede caelitibus et saturae corpora! Ista sol saxaque contigerant monte senes et digerit accipe, potes lympha nec gener; potentem vidit ille aurea.</p> <p>Medii somni orant ludunt; est sunt, audacia lumina ultricibus tamen, meo opaca, dixit, mari. Rara sumimus harenis cum: scire veri iuvat, in saltu signisque habeto vinci. Et signatum arbor locum non nec! Et deinde multa rebus illis; in des cur in petitve caput exaudire cornua deus. Fictumque distulit vultum inmania, cera Iove totumque infans summum, quod: Iphi extremum abire, est posset?</p>"},{"location":"about/#e-litora-simulasse-nunc","title":"E litora simulasse nunc","text":"<p>Species coercuerat Andros, foret per confertur donisque iniecit credere, atque spatium fletus; gremio ostendisse? Suae fessos, Graecia rigidis prosunt nato, tot foret et. Narremur veloxque umida crescentem sacrasque siquid tenues; fit alae vis iussos. Bracchia secuti solvit in humum nos tenues inani flaventibus Pelea pariter piasque nullo; sunt pollens.</p> <pre><code>if (cutBus) {\n    imap.laser_leaderboard_soft -= meta;\n    unix.laptop += record_services;\n} else {\n    userDebugHard.uncWordText = clean + 1;\n    adware_plagiarism.port = 26;\n}\ncameraCharacter += pim_log(wireless_bitrate_mashup, database(aclCarrier,\n        filename));\nsaas_opacity = rippingReader;\n</code></pre> <p>Habebat et quas aditumque altera. Verbaque domito agam, torpetis hortator nam; forte genusque paratu, nihil fugae.</p>"},{"location":"hidden/","title":"Hidden","text":"<p>This is a hidden page.</p>"},{"location":"omegat/","title":"OmegaT","text":"<p>blabal bloody bloody bla</p>"},{"location":"omegat/#installation","title":"Installation","text":"<p>foo</p>"},{"location":"omegat/#customization","title":"Customization","text":"<p>bar</p>"},{"location":"omegat/#windows","title":"Windows","text":"<p>\u00f1albkj</p>"},{"location":"profiles/","title":"Profiles","text":""},{"location":"profiles/#audience-tech","title":"Audience\ua789 Tech","text":"<ul> <li>Errors</li> </ul>"},{"location":"profiles/#audiencetech","title":"Audience\ua789Tech","text":"<ul> <li>Building</li> </ul>"},{"location":"profiles/#audienceuser","title":"Audience\ua789User","text":"<ul> <li>Auxiliary tools</li> <li>OmegaT tips and tricks</li> <li>Autotext</li> <li>No-break spaces</li> </ul>"},{"location":"tools/","title":"Tools","text":""},{"location":"projects/","title":"Projects","text":"<p>adlkfj</p>"},{"location":"projects/flash/","title":"IPSOS -- Eurograduate FLASH","text":""},{"location":"projects/pisa/","title":"PISA 2025","text":"<p>asdfasdf</p>"},{"location":"projects/pisa/errors/","title":"Errors","text":""},{"location":"projects/pisa/errors/#erros-in-previewer","title":"Erros in previewer","text":"<p>03_COS_SCI-C_N/PISA_2025FT_SCI_CACERS101-AcidsandBases.xml Call Error:Could not store translation: TypeError: Cannot read property 'innerHTML' of null Reference number:168587138967440</p> <p>Request failed with status code 504 Reference number:16859089327889 03_COS_SCI-C_N/PISA_2025FT_SCI_CCZES100-Lightning.xml</p>"},{"location":"projects/pisa/trainings/","title":"OmegaT support","text":""},{"location":"projects/pisa/trainings/#omegat-for-pisa25-translatorsreconcilers","title":"OmegaT for PISA25 translators/reconcilers","text":"<p>2h Training (for Uzbeq)</p> <p>https://vimeo.com/847334466</p>"},{"location":"projects/pisa/trainings/#contents","title":"Contents:","text":""},{"location":"projects/pisa/trainings/#slides","title":"slides:","text":""},{"location":"projects/pisa/trainings/#handling-and-fixing-tags-in-omegat","title":"Handling and fixing tags in OmegaT","text":"<p>10' video about the issue we saw yesterday. It's to share with users but it can be even more useful for us, please watch it unless you are 100% sure that you know how to advise the user in this kind of issue:  https://vimeo.com/833937621</p>"},{"location":"tech/","title":"Internal usage","text":"<ul> <li>Outsource OmegaT project as XLIFF</li> </ul>"},{"location":"tech/misc/","title":"Misc","text":"<p>Install Java?? https://docs.oracle.com/en/java/javase/11/install/installation-jdk-macos.html#GUID-7EB4F697-F3D1-40EA-ACDF-07FA90F02D57 https://adoptium.net/temurin/releases/?version=11 https://www.azul.com/downloads/?version=java-11-lts&amp;os=macos&amp;package=jre#zulu change default Java version?</p>"},{"location":"tech/odooks/","title":"Odooks","text":""},{"location":"tech/odooks/#how-to-add-a-page-to-odoo-ks","title":"How to add a page to Odoo KS","text":""},{"location":"tech/omt2xliff/","title":"Omt2xliff","text":""},{"location":"tech/oneliners/","title":"Terminal oneliners","text":""},{"location":"tech/oneliners/#move-files-to-their-batch-folder","title":"Move files to their batch folder","text":"<p>The following loop gets the batch (key) including each file in the YAML config and copies the file from <code>new-keys/03_lint</code> to the batch folder that corresponds under <code>RELEASE_A</code>:</p> <pre><code>for f in $(cat pisa25_files.yaml | shyaml get-value releaseA | sed 's/^- //' | \\\ncut -d':' -f1); do b=$(grep -Poh \"(?&lt;=${f}: ).+\" pisa25_files.yaml) &amp;&amp; echo $b \\\n&amp;&amp; find new-keys/03_lint -name $f &amp;&amp; cp new-keys/03_lint/$f RELEASE_A/$b; done\n</code></pre> <p>Note</p> <p>File and folder names can be probably simplified.</p>"},{"location":"tech/oneliners/#edit-subnodes-in-xhtml-files","title":"Edit subnodes in XHTML files","text":"<p>The following command finds HTML files that do not (<code>-L</code>) contain <code>&lt;meta charset=\"utf-8\"/&gt;</code> and adds that node to them at the bottom of the head section:</p> <pre><code>find $work_path -name \"*.html\" -type f -exec grep -L '&lt;meta charset=\"utf-8\"/&gt;' \\\n{} \\; -exec xmlstarlet ed --inplace --subnode \"/html/head\" --type elem -n meta \\\n-i /html/head/meta -t attr -n charset -v \"utf-8\" {} \\;\n</code></pre>"},{"location":"tech/oneliners/#extract-key-and-text","title":"Extract key and text","text":"<p>Given a number of XML files containing labels such as:</p> <pre><code>    &lt;label key=\"item1_93cba07454f06a4a960172bbd6e2a435_25\"&gt;\n        &lt;text&gt;Yes&lt;/text&gt;\n    &lt;/label&gt;\n</code></pre> <p>The following oneliner extracts filename, key and text:</p> <pre><code>pcregrep -Mo --color '(?&lt;=key=\")[^\"]+?(?=\")(?:[\\s\\S\\n]+?&lt;text&gt;)[\\s\\S]+?(?=&lt;/text&gt;)' *.xml | perl -0777 -pe 's/\"&gt;[\\s\\n]+&lt;text&gt;/:/gm' | xsel -ib\n</code></pre> <p>ttt docs oneliners </p> <p>find $work_path -name \"diffte*t.html\" -type f -exec grep -L '' {} \\; -exec xmlstarlet ed --inplace --subnode \"/html/head\" --type elem -n meta -i /html/head/meta -t attr -n charset -v \"utf-8\" {} \\;</p> <p>how to restore deleted translations </p> <p>git checkout [previous-commit-before-the-commit-that-deleted-translations] cp omegat/project_save.tmx ../03d9f5e.tmx # where 03d9f5e is the commit hash git checkout main mkdir tm/auto/restored mv ../03d9f5e.tmx tm/auto/restored  git pull &amp;&amp; git add . &amp;&amp; git commit -m \"Restored translations from day Nov 3, accidentally removed\" &amp;&amp; git push </p> <p>resources</p> <p>https://linuxcommandlibrary.com/basic/oneliners</p>"},{"location":"tech/oneliners/#resources","title":"Resources","text":"<p>https://linuxcommandlibrary.com/basic/oneliners</p>"},{"location":"tech/regex/","title":"Regex","text":"<p>regex collection</p>"},{"location":"tech/support/","title":"Support","text":""},{"location":"tech/support/#teamviewer-quicksupport","title":"TeamViewer -- QuickSupport","text":"<p>When the support agent sends the QuickSupport utility link to the user, the user must simply click on it to download the utility, then double click the utility to run it, then authorize the support agent's access.</p> <p>If the user is an employee or member of the team, they might already have TeamViewer installed by Harras. In that case, they will not be able to run the QuickSupport utility. They might not be able to provide a password together with their ID.</p> <p>What to do:</p> <ul> <li>Instruct the user to close TeamViewer in their machine before running the QuickSupport utility.</li> <li>To close TeamViewer, they must right click on the icon in the system tray, then select Exit.</li> <li>After that, double click the QuickSupport utility and authorize access.</li> </ul> <p>https://odoo.capstan.be/web#id=20354&amp;action=565&amp;active_id=111&amp;model=project.task&amp;view_type=form&amp;cids=1&amp;menu_id=375</p> <p>@todo: mac? TV mac https://imgur.com/a/Xioi5kc https://i.imgur.com/CVExC18.png</p>"},{"location":"tech/utils/","title":"Utils","text":"<p>Good morning, I would like to share a new application that you might find useful for different purposes (bulk updates in translation files):  https://github.com/capstanlqc/source-xml-linter</p> <p>If you want to contribute, have a look at the backlog or write an issues. PRs welcome.</p>"},{"location":"tools/","title":"Tools","text":"<p>a\u00f1dlkj</p>"},{"location":"tools/aux-tools/","title":"Auxiliary tools","text":"","tags":["Audience\ua789User"]},{"location":"tools/aux-tools/#autohotkey","title":"AutoHotKey","text":"<p>AutoHotKey can be used to create global autotext macros. In particular, if you need to insert non-breaking spaces or other special characters, you might find this AutoHotKey script helpful.</p> <ol> <li> <p>Download and install AutoHotKey.</p> </li> <li> <p>Press Win+R on your keyboard and type <code>shell:startup</code> to open the Startup folder. Copy the path to that folder (e.g. <code>C:\\Users\\USER\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>, where <code>USER</code> would be your Windows user name).</p> </li> <li> <p>Right click on this link, choose \u201cSave link as\u201d and paste the path to the Startup folder before the file name, to download the script file in that folder.</p> </li> <li> <p>Right click the script file (<code>insert_unicode_char.ahk</code>) in the Startup folder and choose Run script.</p> </li> </ol> <p>This script will be run automatically the next time your machine starts.</p>","tags":["Audience\ua789User"]},{"location":"tools/aux-tools/#tmx-editor","title":"TMX Editor","text":"","tags":["Audience\ua789User"]},{"location":"tools/aux-tools/#for-windows","title":"For Windows:","text":"<p>you will need  - a Github account, log in to it in the default browser - admin rights in your machine</p> <p>install dependencies</p> <ul> <li>Insta JDK 17 from Temurin... add to PATH</li> <li>Run PowerShell as administrator</li> <li>Install Chocolatey, restart PS</li> <li>choco install git -y</li> <li>choco install gh -y</li> <li>choco install ant -y</li> <li>choco install nodejs-lts -y</li> <li>restart PS</li> <li>npm install typescript (or choco install typescript)</li> <li>optional: update npm</li> <li>check all versions: node -v, npm -v, ant -version, java -version</li> <li> <p>restart PS as admin</p> </li> <li> <p>mkdir C:\\Users\\USER\\Apps</p> </li> <li>cd C:\\Users\\USER\\Apps</li> <li>gh repo clone rmraya/TMXEditor</li> <li>cd TMXEditor</li> <li>ant</li> <li>npm install</li> <li>npm start</li> </ul> <p>cultural shift -- in PM attitude  judgement calls -- </p> <p>KS articles --- </p> <p>Tanya -- filter outlook</p>","tags":["Audience\ua789User"]},{"location":"tools/aux-tools/#for-linux-and-mac","title":"For Linux and Mac","text":"<p>Just follow the documentation.</p>","tags":["Audience\ua789User"]},{"location":"tools/okapi/building/","title":"Building","text":"<p>git clone https://bitbucket.org/okapiframework/okapi.git cd okapi git checkout dev</p> <p>(optional: to get update) git pull origin dev</p> <p>Note: making a build</p> <p>$ mvn clean install --update-snapshots -DskipTests</p> <p>plugin</p> <p>cd  ~/Repos/okapiframework/omegat-plugin cd filters mvn clean package</p> <p>git clone https://bitbucket.org/okapiframework/omegat-plugin.git cd omegat-plugin git checkout dev git pull origin dev cd filters mvn clean package</p> <p>poetry cheatsheet: </p>"},{"location":"tools/okapi/building/#poetry","title":"poetry","text":""},{"location":"tools/okapi/building/#create-venv","title":"create venv","text":"<p>poetry install</p> <p>poetry show poetry env list poetry env info poetry env info --path</p>"},{"location":"tools/okapi/building/#activate-venv","title":"activate venv","text":"<p>poetry shell</p>"},{"location":"tools/okapi/building/#cd-app-folder-to-create-poetry-project","title":"cd app-folder # (to create poetry project)","text":""},{"location":"tools/okapi/building/#poetry-init","title":"poetry init","text":""},{"location":"tools/okapi/building/#poetry-add-package-or-cat-requirementstxt-xargs-poetry-add","title":"poetry add package # or: cat requirements.txt | xargs poetry add","text":""},{"location":"tools/okapi/building/#poetry-install-to-install-dependencies","title":"poetry install # to install dependencies","text":""},{"location":"tools/okapi/building/#poetry-shell-to-activate","title":"poetry shell # to activate","text":""},{"location":"tools/okapi/building/#exit-to-deactivate","title":"exit # to deactivate","text":""},{"location":"tools/okapi/filters/","title":"Filters","text":"<p>file okf_xml@ysc-key-based-wc.fprm :</p> <p> <p> </p> <p></p> <p>Code finder: </p> <pre><code>&lt;okp:codeFinder useCodeFinder=\"yes\"&gt;#v1\ncount.i=4\nrule0=\\{\\{[^}\\n]+?\\}\\}\nrule1=\\{[^}\\n]+?\\}\nrule2=\\&amp;lt;(/?)\\w+[^&amp;gt;]*?&amp;gt;\nrule3=\\\"(?![:,\\n])([^\\\"]*?)\\\"(?=:)\n&lt;/okp:codeFinder&gt;\n&lt;/its:rules&gt;\n</code></pre>"},{"location":"tools/okapi/filters/#to-match-text-units-with-a-certain-key","title":"to match text units with a certain key:","text":"<p>\\n\\s+&lt;data name=\".(app.pageTitle.participantsDashboard|app.pageTitle.yscqClientDashboard|app.pageTitle.yscqDashboard|dashboard.aggregatedSummary.no|dashboard.aggregatedSummary.placeholder|dashboard.aggregatedSummaryComponent|dashboard.barChartNoDataPlaceholder.resultsTooNarrow|dashboard.clientGoalForm|dashboard.createClient|dashboard.createDevelopmentGoalContainer|dashboard.createDevelopmentGoalForm|dashboard.createDevelopmentGoalPulseForm|dashboard.createExperiencesForm|dashboard.cultureBarChart|dashboard.customIndividual|dashboard.dashboardFeedback|dashboard.dashboardGoal|dashboard.dashboardPlaceholder|dashboard.dashboardShareButton|dashboard.development|dashboard.edit|dashboard.executive|dashboard.explore|dashboard.(indiv|man|not|organ|overall|pageTitle|personal|potential|recomm|score|sidebar|team|update|view)|edpTest.pageTitle.participantsDashboard|feedback.feedbackResponded.viewDashboard|feedback.sharedDashboard|finder.finderContainer.button.viewTeamDashboard|global.dashboard|global.feedbackTabs.sharedDashboards|lsqParticipantReport|app.participantReport.(name|date|jobTitle|how|leaders|know)|global.(lsq|report|judgment|drive|influence)|app.[b-n]|app.pageTitle.[a-nv]|app.pageTitle.(?!yscqClientDashboard|yscqDashboard|participantsDashboard)|app.[s-z]|baseLineChart|clientPeople.|clients.[cu]|edpParticipant|edpTest.c-s|(?&lt;!Stakeholder)feedback.[apru]|feedback.feedback(?!Responded.viewDashboard)|feedbackLine|finder.finder(?!Container.button)|finder.(fit|pag)|global.[abc]|global.d(?!ashboard|rive)|global.ef|global.ghi|global.j-z|profilesOfSuccess.(pageTitle|profiles?OfSuccess)|project.[a-z]|shared.|(?&lt;!Error.)surveys.|tasks.a|team.(pageTitle|team)|teamDynamicsLineChart.p|(?&lt;!Error.)Demographics.(Age|CurrentLength|Disability|EthnicOrigin|Gender|Industry|Job|Language|Last|Level|Location|Sexual|Transgender)|app.clientUser|app.demo|clientPeople.userDemo).\" [^&gt;]+&gt;[\\n\\s]+[\\s\\S]*?[\\n\\s]+</p> <p>\\n\\s+&lt;trans-unit id=\".(app.pageTitle.participantsDashboard|app.pageTitle.yscqClientDashboard|app.pageTitle.yscqDashboard|dashboard.aggregatedSummary.no|dashboard.aggregatedSummary.placeholder|dashboard.aggregatedSummaryComponent|dashboard.barChartNoDataPlaceholder.resultsTooNarrow|dashboard.clientGoalForm|dashboard.createClient|dashboard.createDevelopmentGoalContainer|dashboard.createDevelopmentGoalForm|dashboard.createDevelopmentGoalPulseForm|dashboard.createExperiencesForm|dashboard.cultureBarChart|dashboard.customIndividual|dashboard.dashboardFeedback|dashboard.dashboardGoal|dashboard.dashboardPlaceholder|dashboard.dashboardShareButton|dashboard.development|dashboard.edit|dashboard.executive|dashboard.explore|dashboard.(indiv|man|not|organ|overall|pageTitle|personal|potential|recomm|score|sidebar|team|update|view)|edpTest.pageTitle.participantsDashboard|feedback.feedbackResponded.viewDashboard|feedback.sharedDashboard|finder.finderContainer.button.viewTeamDashboard|global.dashboard|global.feedbackTabs.sharedDashboards|lsqParticipantReport|app.participantReport.(name|date|jobTitle|how|leaders|know)|global.(lsq|report|judgment|drive|influence)|app.[b-n]|app.pageTitle.[a-nv]|app.pageTitle.(?!yscqClientDashboard|yscqDashboard|participantsDashboard)|app.[s-z]|baseLineChart|clientPeople.|clients.[cu]|edpParticipant|edpTest.c-s|(?&lt;!Stakeholder)feedback.[apru]|feedback.feedback(?!Responded.viewDashboard)|feedbackLine|finder.finder(?!Container.button)|finder.(fit|pag)|global.[abc]|global.d(?!ashboard|rive)|global.ef|global.ghi|global.j-z|profilesOfSuccess.(pageTitle|profiles?OfSuccess)|project.[a-z]|shared.|(?&lt;!Error.)surveys.|tasks.a|team.(pageTitle|team)|teamDynamicsLineChart.p|(?&lt;!Error.)Demographics.(Age|CurrentLength|Disability|EthnicOrigin|Gender|Industry|Job|Language|Last|Level|Location|Sexual|Transgender)|app.clientUser|app.demo|clientPeople.userDemo)[\"]*\"[&gt;]&gt;[\\n\\s]+[\\s\\S]*?[\\n\\s]+</p>"},{"location":"tools/omegat/","title":"OmegaT tips and tricks","text":"<p>Some stuff...</p> <p>conflict resolution dialog  https://imgur.com/Tv4ynAY.png</p>","tags":["Audience\ua789User"]},{"location":"tools/omegat/autotext/","title":"Autotext","text":"<p>You may insert any special character in OmegaT using autotext.</p> <p>To see the list of special characters and their shortcuts in OmegaT, go to Options &gt; Preferences &gt; Auto-completion &gt; Autotext (or check them out online here).</p> <p>If there is a special character that you would like to have added to the list (for all users), please create a ticket in the OmegaT helpdesk to let us know.</p> <p>Info</p> <p>See a specific example: how to insert no-break spaces.</p>","tags":["Audience\ua789User"]},{"location":"tools/omegat/building/","title":"Building","text":"<p>I would like to mention that we now have the possibility to create our own (cApStAn's) installer of OmegaT 6.1.0, if we need to. Kudos to Adrien and Gergely for all their help! </p> <p>That means that if needed we could (as a very exceptional case if case of emergency) add features to our own installer which for any reason are not being included (in time or at all) in the official installer. </p> <p>Ideally we should avoid having an independent fork that is not aligned with the official codebase, that would lead to maintenance issues sooner or later. </p> <p>well, and there are other inconvenients, like the installer not knowing what is the user's home folder, so custom config files will have to be included in the installation folder, which the problems that this entails if a </p>","tags":["Audience\ua789Tech"]},{"location":"tools/omegat/building/#creating-a-signed-omegat-installer","title":"Creating a signed OmegaT installer","text":"","tags":["Audience\ua789Tech"]},{"location":"tools/omegat/building/#getting-started","title":"Getting started","text":"<p>The following working environment is recommended:</p> <ol> <li>A Linux machine (recommended Debian-based) that runs <code>systemctl</code>.     &gt; A virtual machine or WSL could be a valid substitute. This guide is based on building on MX\u00a0Linux (Linux 5.10.0-22-amd64) and <code>apt</code> is used for package installation commands.</li> <li>Install dependencies:     <code>$ sudo apt install libxrender1 libxtst6 libxi6 libfreetype6 fontconfig gnutls-bin p11tool software-properties-common softhsm2 libengine-pkcs11-openssl osslsigncode icedtea-netx pcsclite pcsc-tools pcscd procertum-cardreader gh</code></li> <li>Install docker:     <code>$ sudo apt install docker</code></li> <li>Adjust the group membership of your user, so that you can run docker images:     <code>$ sudo groupadd docker     $ sudo usermod -aG docker $USER # or: sudo groupadd docker</code></li> <li>Restart or log out.</li> </ol>","tags":["Audience\ua789Tech"]},{"location":"tools/omegat/building/#before-building","title":"Before building","text":"","tags":["Audience\ua789Tech"]},{"location":"tools/omegat/building/#setting-up-docker","title":"Setting up docker","text":"<p>Follow these steps: </p> <ol> <li>Make sure that <code>docker</code> is in your groups:     <code>$ groups     sys wheel rfkill autologin souto foo bar docker</code></li> <li>Start docker:     <code>$ systemctl start docker</code></li> <li>Check if <code>docker</code> works:     <code>$ docker run hello-world</code></li> <li>Create a folder for the building process:     <code>$ mkdir -p /path/to/omegat-installer</code></li> </ol>","tags":["Audience\ua789Tech"]},{"location":"tools/omegat/building/#setting-up-java","title":"Setting up Java","text":"<p>There are other ways to do this, what follows is what I use and my recommended approach.</p> <ol> <li>Install sdkman (as explained here):     <code>$ curl -s \"https://get.sdkman.io\" | bash     $ source \"$HOME/.sdkman/bin/sdkman-init.sh\"</code></li> <li>Select the Java version that you need, i.e. <code>17.0.4-tem</code> (recommended: make it your default version)     <code>$ sdk use java 17.0.4-tem</code></li> <li>Confirm that you have the expected java version:     <code>$ java -version     openjdk version \"11.0.19\" 2023-04-18     OpenJDK Runtime Environment Temurin-11.0.19+7 (build 11.0.19+7)     OpenJDK 64-Bit Server VM Temurin-11.0.19+7 (build 11.0.19+7, mixed mode)</code> </li> <li>Download the zipped JRE bundle for the same version (file called <code>OpenJDK11U-jre_x64_windows_hotspot_11.0.19_7.zip</code>) from https://adoptium.net/ for the following criteria:<ul> <li>Operating system: Windows</li> <li>Architecture: x64</li> <li>Package type: JRE</li> <li>Version: 11 - LTS</li> </ul> </li> <li>Move the zipped JRE bundle to your building folder:     <code>$ mv ~/Downloads/OpenJDK11U-jre_x64_windows_hotspot_11.0.19_7.zip /path/to/omegat-installer/</code></li> </ol>","tags":["Audience\ua789Tech"]},{"location":"tools/omegat/building/#activate-the-certificate","title":"Activate the certificate","text":"<p>The steps in this section only need to be done once. If that has already been done and you already have a valid binary file of the certificate (the file with <code>.cer</code> extension) which hasn't expired, you can skip to the next section.</p> <p>Using Certum certificate, go through the procedure to activate the certificate. Through that process, you will have to define a PIN number for the common profile that is used to access the Certum's cryptographic smart card.</p> <p>You'll have to run two tools for that: </p> <ul> <li>the SmartCard Reader (which you have already installed as a dependency)     <code>$ cd /opt/proCertumCardManager     $ proCertumCardManager</code></li> <li>and a Crypto tool (which the Certum page will ask you download):     <code>$ javaws CertumCryptoAgent_en.jnlp</code> At the end of the process when the certificate is activated and available for download, download the binary certificate (with a <code>.cer</code> extension) from the Certum page. </li> </ul>","tags":["Audience\ua789Tech"]},{"location":"tools/omegat/building/#getting-down-to-building","title":"Getting down to building","text":"<p>Ok, let's build the installer.</p> <ol> <li>Move the certificate file to your building folder :      <code>$ mkdir /path/to/omegat-installer/cert/     $ mv ~/Downloads/be737b17c8d3f3f0d7bbfae716b0ee1a.cer /path/to/omegat-installer/cert/</code></li> <li>Change directory to your building folder:      <code>$ cd /path/to/omegat-installer/</code></li> <li>Clone the OmegaT source code repository:     <code>$ gh repo clone omegat-org/omegat</code></li> <li> <p>Change directory to the <code>omegat</code> folder:</p> <p><code>$ cd omegat</code> Check out any specific branch if the main/master branch is not what you want to use.</p> </li> <li> <p>Create your <code>local.properties</code> file:</p> <p><code>$ cp local.properties.example local.properties</code> 6. Add your certificate details to the <code>local.properties</code> file: <code>pkcs11module=/usr/lib64/crypto3PKCS/sc30pkcs11-3.0.6.68-MS.so winCodesignPassword=**** # your PIN number winCodesignCert=/path/to/omegat-installer/cert/be737b17c8d3f3f0d7bbfae716b0ee1a.cer</code> Defining <code>pkcs11cert</code> and <code>winCodesignTimestampUrl</code> is not necessary.</p> </li> <li> <p>Kindly ask Gradle to build OmegaT from source and bundle it with the JRE you downloaded into a Windows setup package:     <code>$ ./gradlew winJRE64Signed</code></p> </li> </ol>","tags":["Audience\ua789Tech"]},{"location":"tools/omegat/building/#result","title":"Result","text":"<p>If the process works, the installer will be saved in folder <code>./build/distributions</code>:     <code>$ cd /path/to/omegat-installer/omegat     $ find . -name \"*.exe\"     ./build/distributions/OmegaT_6.1.0_Beta_Windows_64_Signed.exe</code></p>","tags":["Audience\ua789Tech"]},{"location":"tools/omegat/building/#references","title":"References","text":"<ul> <li>https://omegat.sourceforge.io/manual-standard/en/chapter.installing.and.running.html#building.OmegaT.from.source</li> <li>https://github.com/omegat-org/omegat/tree/master/docs_devel</li> <li>https://github.com/omegat-org/omegat/blob/master/docs_devel/docs/93.BuildingInstallerPackage.md</li> <li>https://shop.certum.eu/open-source-code-signing.html</li> <li>https://github.com/omegat-org/omegat/blob/master/docs_devel/docs/92.CodeSigning.md</li> <li>https://github.com/amake/innosetup-docker</li> </ul>","tags":["Audience\ua789Tech"]},{"location":"tools/omegat/errors/","title":"Errors","text":"","tags":["Audience\ua789 Tech"]},{"location":"tools/omegat/errors/#unable-to-read-project-file-ref-originhash-cannot-be-resolved","title":"Unable to read project file! Ref origin/HASH cannot be resolved","text":"<p>The user gets this error when opening the team project:</p> <p>Unable to read project file! org.eclipse.jgit.api.errors.RefNotFoundException: Ref origin/{hash} cannot be resolved</p> <p></p> <p>Likely cause: The user has downloaded the team project in a sync'ed folder (under OneDrive, Dropbox, etc.).</p>","tags":["Audience\ua789 Tech"]},{"location":"tools/omegat/errors/#unable-to-download-team-project","title":"Unable to download team project!","text":"<p>The user gets this error when downloading the team project:</p> <p>Unable to download team project! java.util.concurrent.ExecutionException: org.eclipse.jgit.api.errors.RefNotFoundException: Ref origin/master cannot be resolved</p> <p>x</p> <p>Likely cause: lack of support for <code>main</code> branches in git projects, it may happen with omegat versions below 5.5.</p>","tags":["Audience\ua789 Tech"]},{"location":"tools/omegat/errors/#unable-to-download-team-project-authentication-exception","title":"Unable to download team project: authentication exception","text":"<p>The user gets this error when downloading the team project:</p> <p>Unable to download team project! java.util.concurrent.ExecutionException: org.tmatesoft.svn.core.SVNAuthenticationException: svn: E170001: OPTIONS of '{URL}': 403 Forbidden..</p> <p></p> <p>Likely cause: Incorrect credentials.</p>","tags":["Audience\ua789 Tech"]},{"location":"tools/omegat/errors/#unable-to-download-team-project-project-file-was-not-a-file","title":"Unable to download team project: project file was not a file","text":"<p>The user gets this error when downloading the team project:</p> <p>Unable to download team project!  java.util.concurrent.ExecutionException: java.lang.IllegalArgumentException: Project file /path/to/project/omegat.project was not a file</p> <p></p> <p>Likely cause: The OmegaT project does not exist in that branch or is corrupted.</p>","tags":["Audience\ua789 Tech"]},{"location":"tools/omegat/errors/#socket-closed","title":"Socket closed???","text":"<p>https://imgur.com/v8MGPqd.png</p> <p></p> <p>https://imgur.com/klbhChr.png</p> <p>The error shows that OmegaT failed to upload with credential problem. The user may not have write permissions. </p> <p>TransportException =&gt;  https authentication or communication error</p> <p>git-upload-pack not permitted -&gt; git service deny to accept upload command.</p> <p>https://docs.aws.amazon.com/codecommit/latest/userguide/troubleshooting-ae.html https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-ide-ec.html https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-without-cli.html</p> <p>--</p> <p>https://imgur.com/2VeicWe.png</p>","tags":["Audience\ua789 Tech"]},{"location":"tools/omegat/nbsp/","title":"No-break spaces","text":"<p>To insert a non-breaking space in OmegaT, follow these steps:</p> <ol> <li>Type <code>\\nbsp</code> in the position you want to insert the non-breaking space.</li> <li>Press Enter on your keyboard to accept the AutoText entry and covert <code>\\nbsp</code> to an actual non-breaking space.</li> </ol> <p>Info</p> <p>Check the Autotext section for general information about inserting special characters.</p>","tags":["Audience\ua789User"]},{"location":"tools/omegat/scripts/","title":"Scripts","text":""},{"location":"tools/omegat/scripts/#adapt-standard-tags","title":"Adapt standard tags","text":"<p>This script does..</p> <p>To use it, do ...</p>"},{"location":"tools/omegat/scripts/#etc","title":"etc.","text":""},{"location":"tools/omegat/team_projects/","title":"Team projects","text":""},{"location":"tools/omegat/team_projects/#restoring-translations","title":"Restoring translations","text":"<p>Have a look at the log to identify which commit deleted translations:</p> <pre><code>git log --stat\n</code></pre> <p>Then, copy the commit hash of the previous commit, e.g. <code>03d9f5e</code>, and do:</p> <pre><code>git checkout 03d9f5e\ncp omegat/project_save.tmx ../03d9f5e.tmx\ngit checkout main\nmkdir tm/auto/restored\nmv ../03d9f5e.tmx tm/auto/restored \ngit pull &amp;&amp; git add . &amp;&amp; git commit -m \"Restored translations\" &amp;&amp; git push\n</code></pre>"},{"location":"tools/omegat/wordcount/","title":"Word count analysis","text":"<p>Word count analysis depend on the definition of \"word\", which (for the purposes of word count analyses of source texts in Latin alphabet) is considered to be a unit of text between word boundaries (e.g. spacing and punctuation symbols). </p> <p>However, different tools will use different parameters to count words, so it's not realistic to expect reports from different tools to be always identical. If you add tags (e.g. <code>&lt;b&gt;</code>) or escaped tags (e.g. <code>&amp;lt;b&amp;gt;</code>) to the equation, this gets more complex. </p> <p>For example:</p> <ul> <li>memoQ has a simple approach: it simply counts chunks of text between spaces and does not consider escaped tags as unitary tokens.</li> <li>OmegaT counts escaped tags as unitary tokens but for example considers the Saxon genitives as independent words.</li> <li>Rainbow ignores escaped tags and considers Saxon genitives as a suffix, thus as part of the preceding word.</li> </ul> <p>Therefore, the string <code>wall\u2019s&amp;lt;br /&amp;gt;</code> will yield totally different counts in the three tools considered above:</p> memoQ OmegaT Rainbow 2 words 3 words 1 word wall\u2019s&amp;lt;br /&amp;gt; wall\u2019s&amp;lt;br /&amp;gt; wall\u2019s&amp;lt;br /&amp;gt; <p>Other characters might be differently estimated too. The example above does not mean to be comprehensive. </p>"},{"location":"profiles/","title":"Profiles","text":""},{"location":"profiles/#audience-tech","title":"Audience\ua789 Tech","text":"<ul> <li>Errors</li> </ul>"},{"location":"profiles/#audiencetech","title":"Audience\ua789Tech","text":"<ul> <li>Building</li> </ul>"},{"location":"profiles/#audienceuser","title":"Audience\ua789User","text":"<ul> <li>Auxiliary tools</li> <li>OmegaT tips and tricks</li> <li>Autotext</li> <li>No-break spaces</li> </ul>"}]}